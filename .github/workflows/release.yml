# name: Release

# on:
#     push:
#         tags:
#             - "*"

# jobs:
#     release-cli:
#         runs-on: ubuntu-latest
#         permissions:
#             contents: write

#         steps:
#             - name: Checkout repository
#               uses: actions/checkout@v4

#             - name: Cache Cargo registry and build files
#               uses: actions/cache@v4
#               with:
#                   path: |
#                       ~/.cargo/registry
#                       ~/.cargo/git
#                       target
#                   key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

#             - name: Set up Rust toolchain
#               uses: dtolnay/rust-toolchain@stable

#             - name: Install Zig (Latest Version)
#               run: |
#                   ZIG_TARBALL_URL=$(curl -s https://ziglang.org/download/index.json | jq -r '.master["x86_64-linux"].tarball')
#                   ZIG_VERSION=$(basename $ZIG_TARBALL_URL .tar.xz)
#                   wget $ZIG_TARBALL_URL
#                   tar -xf $ZIG_VERSION.tar.xz
#                   mv $ZIG_VERSION /opt/zig
#                   echo "/opt/zig" >> $GITHUB_PATH

#             - name: Add Rust targets for macOS
#               run: |
#                   rustup target add x86_64-apple-darwin aarch64-apple-darwin

#             - name: Run Clippy
#               run: cargo clippy --manifest-path cli/Cargo.toml -- -D warnings

#             - name: Formatter
#               run: cargo fmt --manifest-path cli/Cargo.toml -- --check

#             - name: Run Tests
#               run: cargo test --manifest-path cli/Cargo.toml

#             - name: Build cmdstack CLI for Linux
#               run: cargo build --release --manifest-path cli/Cargo.toml

#             - name: Cross-compile cmdstack CLI for macOS (x86_64)
#               run: cargo build --release --target x86_64-apple-darwin --manifest-path cli/Cargo.toml

#             - name: Cross-compile cmdstack CLI for macOS (aarch64)
#               run: cargo build --release --target aarch64-apple-darwin --manifest-path cli/Cargo.toml

#             - name: Create macOS universal binary
#               run: |
#                   sudo apt install -y llvm
#                   llvm-lipo -create -output target/release/cmdstack-macos-universal \
#                       target/x86_64-apple-darwin/release/cmdstack \
#                       target/aarch64-apple-darwin/release/cmdstack

#             - name: Upload Release Assets
#               uses: ncipollo/release-action@v1
#               with:
#                   artifacts: |
#                       target/release/cmdstack
#                       target/release/cmdstack-macos-universal
#                   tag: ${{ github.ref_name }}
#                   token: ${{ secrets.GITHUB_TOKEN }}
name: Release

on:
    push:
        tags:
            - "*"

jobs:
    release:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Rust toolchain
              uses: dtolnay/rust-toolchain@stable

            # Ensure that Docker is installed and running so that cross can operate properly.
            - name: Check Docker availability
              run: docker info

            - name: Install cross
              run: cargo install cross

            - name: Build for macOS (x86_64)
              working-directory: cli
              run: cross build --release --target x86_64-apple-darwin

            - name: Build for macOS (aarch64)
              working-directory: cli
              run: cross build --release --target aarch64-apple-darwin

            - name: Create GitHub Release and attach artifacts
              uses: ncipollo/release-action@v1
              with:
                  tag: ${{ github.ref_name }}
                  artifacts: |
                      cli/target/x86_64-apple-darwin/release/cli
                      cli/target/aarch64-apple-darwin/release/cli
                  token: ${{ secrets.GITHUB_TOKEN }}
